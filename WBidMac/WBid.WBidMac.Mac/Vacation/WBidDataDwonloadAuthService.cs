//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 
namespace WBidDataDownloadAuthorizationService.Model
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientRequestModel", Namespace="http://schemas.datacontract.org/2004/07/WBidDataDownloadAuthorizationService.Mode" +
        "l")]
    public partial class ClientRequestModel : object
    {
        
        private string BaseField;
        
        private int BidRoundField;
        
        private int EmployeeNumberField;
        
        private string MonthField;
        
        private string OperatingSystemField;
        
        private string PlatformField;
        
        private string PostionField;
        
        private System.Guid TokenField;
        
        private string VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Base
        {
            get
            {
                return this.BaseField;
            }
            set
            {
                this.BaseField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BidRound
        {
            get
            {
                return this.BidRoundField;
            }
            set
            {
                this.BidRoundField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeNumber
        {
            get
            {
                return this.EmployeeNumberField;
            }
            set
            {
                this.EmployeeNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Month
        {
            get
            {
                return this.MonthField;
            }
            set
            {
                this.MonthField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatingSystem
        {
            get
            {
                return this.OperatingSystemField;
            }
            set
            {
                this.OperatingSystemField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Platform
        {
            get
            {
                return this.PlatformField;
            }
            set
            {
                this.PlatformField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postion
        {
            get
            {
                return this.PostionField;
            }
            set
            {
                this.PostionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Token
        {
            get
            {
                return this.TokenField;
            }
            set
            {
                this.TokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version
        {
            get
            {
                return this.VersionField;
            }
            set
            {
                this.VersionField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponseModel", Namespace="http://schemas.datacontract.org/2004/07/WBidDataDownloadAuthorizationService.Mode" +
        "l")]
    public partial class ServiceResponseModel : object
    {
        
        private int AuthRequestIdField;
        
        private bool IsAuthorizedField;
        
        private string MessageField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthRequestId
        {
            get
            {
                return this.AuthRequestIdField;
            }
            set
            {
                this.AuthRequestIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthorized
        {
            get
            {
                return this.IsAuthorizedField;
            }
            set
            {
                this.IsAuthorizedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VersionModel", Namespace="http://schemas.datacontract.org/2004/07/WBidDataDownloadAuthorizationService.Mode" +
        "l")]
    public partial class VersionModel : object
    {
        
        private string FileNameField;
        
        private string VersionNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionNumber
        {
            get
            {
                return this.VersionNumberField;
            }
            set
            {
                this.VersionNumberField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeVersionDetails", Namespace="http://schemas.datacontract.org/2004/07/WBidDataDownloadAuthorizationService.Mode" +
        "l")]
    public partial class EmployeeVersionDetails : object
    {
        
        private int EmpNumField;
        
        private string PlatformField;
        
        private string VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmpNum
        {
            get
            {
                return this.EmpNumField;
            }
            set
            {
                this.EmpNumField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Platform
        {
            get
            {
                return this.PlatformField;
            }
            set
            {
                this.PlatformField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version
        {
            get
            {
                return this.VersionField;
            }
            set
            {
                this.VersionField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubmitBidModel", Namespace="http://schemas.datacontract.org/2004/07/WBidDataDownloadAuthorizationService.Mode" +
        "l")]
    public partial class SubmitBidModel : object
    {
        
        private string BaseField;
        
        private int BidForEmpNumField;
        
        private int BuddyBid1Field;
        
        private int BuddyBid2Field;
        
        private int EmployeeNumberField;
        
        private string EventField;
        
        private string MessageField;
        
        private string MonthField;
        
        private string OperatingSystemNumField;
        
        private string PlatformNumberField;
        
        private string PositionField;
        
        private int RoundField;
        
        private string VersionNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Base
        {
            get
            {
                return this.BaseField;
            }
            set
            {
                this.BaseField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BidForEmpNum
        {
            get
            {
                return this.BidForEmpNumField;
            }
            set
            {
                this.BidForEmpNumField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuddyBid1
        {
            get
            {
                return this.BuddyBid1Field;
            }
            set
            {
                this.BuddyBid1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuddyBid2
        {
            get
            {
                return this.BuddyBid2Field;
            }
            set
            {
                this.BuddyBid2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeNumber
        {
            get
            {
                return this.EmployeeNumberField;
            }
            set
            {
                this.EmployeeNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Event
        {
            get
            {
                return this.EventField;
            }
            set
            {
                this.EventField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Month
        {
            get
            {
                return this.MonthField;
            }
            set
            {
                this.MonthField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatingSystemNum
        {
            get
            {
                return this.OperatingSystemNumField;
            }
            set
            {
                this.OperatingSystemNumField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlatformNumber
        {
            get
            {
                return this.PlatformNumberField;
            }
            set
            {
                this.PlatformNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position
        {
            get
            {
                return this.PositionField;
            }
            set
            {
                this.PositionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Round
        {
            get
            {
                return this.RoundField;
            }
            set
            {
                this.RoundField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionNumber
        {
            get
            {
                return this.VersionNumberField;
            }
            set
            {
                this.VersionNumberField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCredentialModel", Namespace="http://schemas.datacontract.org/2004/07/WBidDataDownloadAuthorizationService.Mode" +
        "l")]
    public partial class UserCredentialModel : object
    {
        
        private string PasswordField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MailInfo", Namespace="http://schemas.datacontract.org/2004/07/WBidDataDownloadAuthorizationService.Mode" +
        "l")]
    public partial class MailInfo : object
    {
        
        private string AliasField;
        
        private byte[] Attachment1Field;
        
        private string Attachment1NameField;
        
        private string FromAddressField;
        
        private string MessageBodyField;
        
        private string SubjectField;
        
        private string ToAddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return this.AliasField;
            }
            set
            {
                this.AliasField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Attachment1
        {
            get
            {
                return this.Attachment1Field;
            }
            set
            {
                this.Attachment1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attachment1Name
        {
            get
            {
                return this.Attachment1NameField;
            }
            set
            {
                this.Attachment1NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromAddress
        {
            get
            {
                return this.FromAddressField;
            }
            set
            {
                this.FromAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageBody
        {
            get
            {
                return this.MessageBodyField;
            }
            set
            {
                this.MessageBodyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject
        {
            get
            {
                return this.SubjectField;
            }
            set
            {
                this.SubjectField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToAddress
        {
            get
            {
                return this.ToAddressField;
            }
            set
            {
                this.ToAddressField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BidDetails", Namespace="http://schemas.datacontract.org/2004/07/WBidDataDownloadAuthorizationService.Mode" +
        "l")]
    public partial class BidDetails : object
    {
        
        private string DomicileField;
        
        private string FileNameField;
        
        private int MonthField;
        
        private string PositionField;
        
        private int RoundField;
        
        private int YearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domicile
        {
            get
            {
                return this.DomicileField;
            }
            set
            {
                this.DomicileField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Month
        {
            get
            {
                return this.MonthField;
            }
            set
            {
                this.MonthField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position
        {
            get
            {
                return this.PositionField;
            }
            set
            {
                this.PositionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Round
        {
            get
            {
                return this.RoundField;
            }
            set
            {
                this.RoundField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year
        {
            get
            {
                return this.YearField;
            }
            set
            {
                this.YearField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileInfo", Namespace="http://schemas.datacontract.org/2004/07/WBidDataDownloadAuthorizationService.Mode" +
        "l")]
    public partial class FileInfo : object
    {
        
        private byte[] DataField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data
        {
            get
            {
                return this.DataField;
            }
            set
            {
                this.DataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BidData", Namespace="http://schemas.datacontract.org/2004/07/WBidDataDownloadAuthorizationService.Mode" +
        "l")]
    public partial class BidData : object
    {
        
        private string DomicileField;
        
        private int IdField;
        
        private int MonthField;
        
        private string PositionField;
        
        private int RoundField;
        
        private int YearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domicile
        {
            get
            {
                return this.DomicileField;
            }
            set
            {
                this.DomicileField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Month
        {
            get
            {
                return this.MonthField;
            }
            set
            {
                this.MonthField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position
        {
            get
            {
                return this.PositionField;
            }
            set
            {
                this.PositionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Round
        {
            get
            {
                return this.RoundField;
            }
            set
            {
                this.RoundField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year
        {
            get
            {
                return this.YearField;
            }
            set
            {
                this.YearField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WbidRepair", Namespace="http://schemas.datacontract.org/2004/07/WBidDataDownloadAuthorizationService.Mode" +
        "l")]
    public partial class WbidRepair : object
    {
        
        private int RepairIndexField;
        
        private System.Nullable<bool> didDeleteDWCField;
        
        private System.Nullable<bool> didDeleteWBSField;
        
        private System.Nullable<System.DateTime> dtgField;
        
        private System.Nullable<int> empNumField;
        
        private string versionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepairIndex
        {
            get
            {
                return this.RepairIndexField;
            }
            set
            {
                this.RepairIndexField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> didDeleteDWC
        {
            get
            {
                return this.didDeleteDWCField;
            }
            set
            {
                this.didDeleteDWCField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> didDeleteWBS
        {
            get
            {
                return this.didDeleteWBSField;
            }
            set
            {
                this.didDeleteWBSField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dtg
        {
            get
            {
                return this.dtgField;
            }
            set
            {
                this.dtgField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> empNum
        {
            get
            {
                return this.empNumField;
            }
            set
            {
                this.empNumField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://WbidAuthService/", ConfigurationName="IWBidDataDwonloadAuthService")]
public interface IWBidDataDwonloadAuthService
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/GetAuthorizationDetails", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/GetAuthorizationDetailsRespon" +
        "se")]
    System.IAsyncResult BeginGetAuthorizationDetails(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel, System.AsyncCallback callback, object asyncState);
    
    WBidDataDownloadAuthorizationService.Model.ServiceResponseModel EndGetAuthorizationDetails(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/GetAuthorizationforMultiPlatf" +
        "orm", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/GetAuthorizationforMultiPlatf" +
        "ormResponse")]
    System.IAsyncResult BeginGetAuthorizationforMultiPlatform(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel, System.AsyncCallback callback, object asyncState);
    
    WBidDataDownloadAuthorizationService.Model.ServiceResponseModel EndGetAuthorizationforMultiPlatform(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/GetLatestVersion", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/GetLatestVersionResponse")]
    System.IAsyncResult BeginGetLatestVersion(System.AsyncCallback callback, object asyncState);
    
    WBidDataDownloadAuthorizationService.Model.VersionModel EndGetLatestVersion(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/GetLatestVersionByUserRole", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/GetLatestVersionByUserRoleRes" +
        "ponse")]
    System.IAsyncResult BeginGetLatestVersionByUserRole(int empNum, System.AsyncCallback callback, object asyncState);
    
    WBidDataDownloadAuthorizationService.Model.VersionModel EndGetLatestVersionByUserRole(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/GetLatestVersionByUserRoleFor" +
        "MultyPlatform", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/GetLatestVersionByUserRoleFor" +
        "MultyPlatformResponse")]
    System.IAsyncResult BeginGetLatestVersionByUserRoleForMultyPlatform(WBidDataDownloadAuthorizationService.Model.EmployeeVersionDetails employeeVersionDetails, System.AsyncCallback callback, object asyncState);
    
    WBidDataDownloadAuthorizationService.Model.VersionModel EndGetLatestVersionByUserRoleForMultyPlatform(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/LogTimeOutDetails", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/LogTimeOutDetailsResponse")]
    System.IAsyncResult BeginLogTimeOutDetails(System.Guid token, System.AsyncCallback callback, object asyncState);
    
    void EndLogTimeOutDetails(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/LogDownloadUpdates", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/LogDownloadUpdatesResponse")]
    System.IAsyncResult BeginLogDownloadUpdates(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel, System.AsyncCallback callback, object asyncState);
    
    bool EndLogDownloadUpdates(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/SendTextAlertOneDayPriorToBid" +
        "ding", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/SendTextAlertOneDayPriorToBid" +
        "dingResponse")]
    System.IAsyncResult BeginSendTextAlertOneDayPriorToBidding(string round, System.AsyncCallback callback, object asyncState);
    
    void EndSendTextAlertOneDayPriorToBidding(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/SendTextAlertOneHourPriorToBi" +
        "dding", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/SendTextAlertOneHourPriorToBi" +
        "ddingResponse")]
    System.IAsyncResult BeginSendTextAlertOneHourPriorToBidding(string round, System.AsyncCallback callback, object asyncState);
    
    void EndSendTextAlertOneHourPriorToBidding(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/SubmitBidDetails", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/SubmitBidDetailsResponse")]
    System.IAsyncResult BeginSubmitBidDetails(WBidDataDownloadAuthorizationService.Model.SubmitBidModel submitBidModel, System.AsyncCallback callback, object asyncState);
    
    void EndSubmitBidDetails(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/GetAdminUserCredential", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/GetAdminUserCredentialRespons" +
        "e")]
    System.IAsyncResult BeginGetAdminUserCredential(System.AsyncCallback callback, object asyncState);
    
    WBidDataDownloadAuthorizationService.Model.UserCredentialModel EndGetAdminUserCredential(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/SendMail", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/SendMailResponse")]
    System.IAsyncResult BeginSendMail(WBidDataDownloadAuthorizationService.Model.MailInfo mailInfo, System.AsyncCallback callback, object asyncState);
    
    string EndSendMail(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/DownloadHistoricalData", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/DownloadHistoricalDataRespons" +
        "e")]
    System.IAsyncResult BeginDownloadHistoricalData(WBidDataDownloadAuthorizationService.Model.BidDetails bidDetails, System.AsyncCallback callback, object asyncState);
    
    WBidDataDownloadAuthorizationService.Model.FileInfo EndDownloadHistoricalData(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/GetAvailableHistoricalList", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/GetAvailableHistoricalListRes" +
        "ponse")]
    System.IAsyncResult BeginGetAvailableHistoricalList(System.AsyncCallback callback, object asyncState);
    
    WBidDataDownloadAuthorizationService.Model.BidData[] EndGetAvailableHistoricalList(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WbidAuthService/IWBidDataDwonloadAuthService/LogWBidRepairDetails", ReplyAction="http://WbidAuthService/IWBidDataDwonloadAuthService/LogWBidRepairDetailsResponse")]
    System.IAsyncResult BeginLogWBidRepairDetails(WBidDataDownloadAuthorizationService.Model.WbidRepair wbidRepair, System.AsyncCallback callback, object asyncState);
    
    void EndLogWBidRepairDetails(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IWBidDataDwonloadAuthServiceChannel : IWBidDataDwonloadAuthService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAuthorizationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAuthorizationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WBidDataDownloadAuthorizationService.Model.ServiceResponseModel Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WBidDataDownloadAuthorizationService.Model.ServiceResponseModel)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAuthorizationforMultiPlatformCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAuthorizationforMultiPlatformCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WBidDataDownloadAuthorizationService.Model.ServiceResponseModel Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WBidDataDownloadAuthorizationService.Model.ServiceResponseModel)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetLatestVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetLatestVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WBidDataDownloadAuthorizationService.Model.VersionModel Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WBidDataDownloadAuthorizationService.Model.VersionModel)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetLatestVersionByUserRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetLatestVersionByUserRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WBidDataDownloadAuthorizationService.Model.VersionModel Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WBidDataDownloadAuthorizationService.Model.VersionModel)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetLatestVersionByUserRoleForMultyPlatformCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetLatestVersionByUserRoleForMultyPlatformCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WBidDataDownloadAuthorizationService.Model.VersionModel Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WBidDataDownloadAuthorizationService.Model.VersionModel)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class LogDownloadUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public LogDownloadUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAdminUserCredentialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAdminUserCredentialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WBidDataDownloadAuthorizationService.Model.UserCredentialModel Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WBidDataDownloadAuthorizationService.Model.UserCredentialModel)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public SendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DownloadHistoricalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public DownloadHistoricalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WBidDataDownloadAuthorizationService.Model.FileInfo Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WBidDataDownloadAuthorizationService.Model.FileInfo)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAvailableHistoricalListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAvailableHistoricalListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WBidDataDownloadAuthorizationService.Model.BidData[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WBidDataDownloadAuthorizationService.Model.BidData[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class WBidDataDwonloadAuthServiceClient : System.ServiceModel.ClientBase<IWBidDataDwonloadAuthService>, IWBidDataDwonloadAuthService
{
    
    private BeginOperationDelegate onBeginGetAuthorizationDetailsDelegate;
    
    private EndOperationDelegate onEndGetAuthorizationDetailsDelegate;
    
    private System.Threading.SendOrPostCallback onGetAuthorizationDetailsCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAuthorizationforMultiPlatformDelegate;
    
    private EndOperationDelegate onEndGetAuthorizationforMultiPlatformDelegate;
    
    private System.Threading.SendOrPostCallback onGetAuthorizationforMultiPlatformCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetLatestVersionDelegate;
    
    private EndOperationDelegate onEndGetLatestVersionDelegate;
    
    private System.Threading.SendOrPostCallback onGetLatestVersionCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetLatestVersionByUserRoleDelegate;
    
    private EndOperationDelegate onEndGetLatestVersionByUserRoleDelegate;
    
    private System.Threading.SendOrPostCallback onGetLatestVersionByUserRoleCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetLatestVersionByUserRoleForMultyPlatformDelegate;
    
    private EndOperationDelegate onEndGetLatestVersionByUserRoleForMultyPlatformDelegate;
    
    private System.Threading.SendOrPostCallback onGetLatestVersionByUserRoleForMultyPlatformCompletedDelegate;
    
    private BeginOperationDelegate onBeginLogTimeOutDetailsDelegate;
    
    private EndOperationDelegate onEndLogTimeOutDetailsDelegate;
    
    private System.Threading.SendOrPostCallback onLogTimeOutDetailsCompletedDelegate;
    
    private BeginOperationDelegate onBeginLogDownloadUpdatesDelegate;
    
    private EndOperationDelegate onEndLogDownloadUpdatesDelegate;
    
    private System.Threading.SendOrPostCallback onLogDownloadUpdatesCompletedDelegate;
    
    private BeginOperationDelegate onBeginSendTextAlertOneDayPriorToBiddingDelegate;
    
    private EndOperationDelegate onEndSendTextAlertOneDayPriorToBiddingDelegate;
    
    private System.Threading.SendOrPostCallback onSendTextAlertOneDayPriorToBiddingCompletedDelegate;
    
    private BeginOperationDelegate onBeginSendTextAlertOneHourPriorToBiddingDelegate;
    
    private EndOperationDelegate onEndSendTextAlertOneHourPriorToBiddingDelegate;
    
    private System.Threading.SendOrPostCallback onSendTextAlertOneHourPriorToBiddingCompletedDelegate;
    
    private BeginOperationDelegate onBeginSubmitBidDetailsDelegate;
    
    private EndOperationDelegate onEndSubmitBidDetailsDelegate;
    
    private System.Threading.SendOrPostCallback onSubmitBidDetailsCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAdminUserCredentialDelegate;
    
    private EndOperationDelegate onEndGetAdminUserCredentialDelegate;
    
    private System.Threading.SendOrPostCallback onGetAdminUserCredentialCompletedDelegate;
    
    private BeginOperationDelegate onBeginSendMailDelegate;
    
    private EndOperationDelegate onEndSendMailDelegate;
    
    private System.Threading.SendOrPostCallback onSendMailCompletedDelegate;
    
    private BeginOperationDelegate onBeginDownloadHistoricalDataDelegate;
    
    private EndOperationDelegate onEndDownloadHistoricalDataDelegate;
    
    private System.Threading.SendOrPostCallback onDownloadHistoricalDataCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAvailableHistoricalListDelegate;
    
    private EndOperationDelegate onEndGetAvailableHistoricalListDelegate;
    
    private System.Threading.SendOrPostCallback onGetAvailableHistoricalListCompletedDelegate;
    
    private BeginOperationDelegate onBeginLogWBidRepairDetailsDelegate;
    
    private EndOperationDelegate onEndLogWBidRepairDetailsDelegate;
    
    private System.Threading.SendOrPostCallback onLogWBidRepairDetailsCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public WBidDataDwonloadAuthServiceClient()
    {
    }
    
    public WBidDataDwonloadAuthServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public WBidDataDwonloadAuthServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WBidDataDwonloadAuthServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WBidDataDwonloadAuthServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<GetAuthorizationDetailsCompletedEventArgs> GetAuthorizationDetailsCompleted;
    
    public event System.EventHandler<GetAuthorizationforMultiPlatformCompletedEventArgs> GetAuthorizationforMultiPlatformCompleted;
    
    public event System.EventHandler<GetLatestVersionCompletedEventArgs> GetLatestVersionCompleted;
    
    public event System.EventHandler<GetLatestVersionByUserRoleCompletedEventArgs> GetLatestVersionByUserRoleCompleted;
    
    public event System.EventHandler<GetLatestVersionByUserRoleForMultyPlatformCompletedEventArgs> GetLatestVersionByUserRoleForMultyPlatformCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogTimeOutDetailsCompleted;
    
    public event System.EventHandler<LogDownloadUpdatesCompletedEventArgs> LogDownloadUpdatesCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendTextAlertOneDayPriorToBiddingCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendTextAlertOneHourPriorToBiddingCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubmitBidDetailsCompleted;
    
    public event System.EventHandler<GetAdminUserCredentialCompletedEventArgs> GetAdminUserCredentialCompleted;
    
    public event System.EventHandler<SendMailCompletedEventArgs> SendMailCompleted;
    
    public event System.EventHandler<DownloadHistoricalDataCompletedEventArgs> DownloadHistoricalDataCompleted;
    
    public event System.EventHandler<GetAvailableHistoricalListCompletedEventArgs> GetAvailableHistoricalListCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogWBidRepairDetailsCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginGetAuthorizationDetails(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAuthorizationDetails(clientRequestModel, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    WBidDataDownloadAuthorizationService.Model.ServiceResponseModel IWBidDataDwonloadAuthService.EndGetAuthorizationDetails(System.IAsyncResult result)
    {
        return base.Channel.EndGetAuthorizationDetails(result);
    }
    
    private System.IAsyncResult OnBeginGetAuthorizationDetails(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel = ((WBidDataDownloadAuthorizationService.Model.ClientRequestModel)(inValues[0]));
        return ((IWBidDataDwonloadAuthService)(this)).BeginGetAuthorizationDetails(clientRequestModel, callback, asyncState);
    }
    
    private object[] OnEndGetAuthorizationDetails(System.IAsyncResult result)
    {
        WBidDataDownloadAuthorizationService.Model.ServiceResponseModel retVal = ((IWBidDataDwonloadAuthService)(this)).EndGetAuthorizationDetails(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAuthorizationDetailsCompleted(object state)
    {
        if ((this.GetAuthorizationDetailsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAuthorizationDetailsCompleted(this, new GetAuthorizationDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAuthorizationDetailsAsync(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel)
    {
        this.GetAuthorizationDetailsAsync(clientRequestModel, null);
    }
    
    public void GetAuthorizationDetailsAsync(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel, object userState)
    {
        if ((this.onBeginGetAuthorizationDetailsDelegate == null))
        {
            this.onBeginGetAuthorizationDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetAuthorizationDetails);
        }
        if ((this.onEndGetAuthorizationDetailsDelegate == null))
        {
            this.onEndGetAuthorizationDetailsDelegate = new EndOperationDelegate(this.OnEndGetAuthorizationDetails);
        }
        if ((this.onGetAuthorizationDetailsCompletedDelegate == null))
        {
            this.onGetAuthorizationDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAuthorizationDetailsCompleted);
        }
        base.InvokeAsync(this.onBeginGetAuthorizationDetailsDelegate, new object[] {
                    clientRequestModel}, this.onEndGetAuthorizationDetailsDelegate, this.onGetAuthorizationDetailsCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginGetAuthorizationforMultiPlatform(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAuthorizationforMultiPlatform(clientRequestModel, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    WBidDataDownloadAuthorizationService.Model.ServiceResponseModel IWBidDataDwonloadAuthService.EndGetAuthorizationforMultiPlatform(System.IAsyncResult result)
    {
        return base.Channel.EndGetAuthorizationforMultiPlatform(result);
    }
    
    private System.IAsyncResult OnBeginGetAuthorizationforMultiPlatform(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel = ((WBidDataDownloadAuthorizationService.Model.ClientRequestModel)(inValues[0]));
        return ((IWBidDataDwonloadAuthService)(this)).BeginGetAuthorizationforMultiPlatform(clientRequestModel, callback, asyncState);
    }
    
    private object[] OnEndGetAuthorizationforMultiPlatform(System.IAsyncResult result)
    {
        WBidDataDownloadAuthorizationService.Model.ServiceResponseModel retVal = ((IWBidDataDwonloadAuthService)(this)).EndGetAuthorizationforMultiPlatform(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAuthorizationforMultiPlatformCompleted(object state)
    {
        if ((this.GetAuthorizationforMultiPlatformCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAuthorizationforMultiPlatformCompleted(this, new GetAuthorizationforMultiPlatformCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAuthorizationforMultiPlatformAsync(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel)
    {
        this.GetAuthorizationforMultiPlatformAsync(clientRequestModel, null);
    }
    
    public void GetAuthorizationforMultiPlatformAsync(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel, object userState)
    {
        if ((this.onBeginGetAuthorizationforMultiPlatformDelegate == null))
        {
            this.onBeginGetAuthorizationforMultiPlatformDelegate = new BeginOperationDelegate(this.OnBeginGetAuthorizationforMultiPlatform);
        }
        if ((this.onEndGetAuthorizationforMultiPlatformDelegate == null))
        {
            this.onEndGetAuthorizationforMultiPlatformDelegate = new EndOperationDelegate(this.OnEndGetAuthorizationforMultiPlatform);
        }
        if ((this.onGetAuthorizationforMultiPlatformCompletedDelegate == null))
        {
            this.onGetAuthorizationforMultiPlatformCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAuthorizationforMultiPlatformCompleted);
        }
        base.InvokeAsync(this.onBeginGetAuthorizationforMultiPlatformDelegate, new object[] {
                    clientRequestModel}, this.onEndGetAuthorizationforMultiPlatformDelegate, this.onGetAuthorizationforMultiPlatformCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginGetLatestVersion(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetLatestVersion(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    WBidDataDownloadAuthorizationService.Model.VersionModel IWBidDataDwonloadAuthService.EndGetLatestVersion(System.IAsyncResult result)
    {
        return base.Channel.EndGetLatestVersion(result);
    }
    
    private System.IAsyncResult OnBeginGetLatestVersion(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IWBidDataDwonloadAuthService)(this)).BeginGetLatestVersion(callback, asyncState);
    }
    
    private object[] OnEndGetLatestVersion(System.IAsyncResult result)
    {
        WBidDataDownloadAuthorizationService.Model.VersionModel retVal = ((IWBidDataDwonloadAuthService)(this)).EndGetLatestVersion(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetLatestVersionCompleted(object state)
    {
        if ((this.GetLatestVersionCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetLatestVersionCompleted(this, new GetLatestVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetLatestVersionAsync()
    {
        this.GetLatestVersionAsync(null);
    }
    
    public void GetLatestVersionAsync(object userState)
    {
        if ((this.onBeginGetLatestVersionDelegate == null))
        {
            this.onBeginGetLatestVersionDelegate = new BeginOperationDelegate(this.OnBeginGetLatestVersion);
        }
        if ((this.onEndGetLatestVersionDelegate == null))
        {
            this.onEndGetLatestVersionDelegate = new EndOperationDelegate(this.OnEndGetLatestVersion);
        }
        if ((this.onGetLatestVersionCompletedDelegate == null))
        {
            this.onGetLatestVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestVersionCompleted);
        }
        base.InvokeAsync(this.onBeginGetLatestVersionDelegate, null, this.onEndGetLatestVersionDelegate, this.onGetLatestVersionCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginGetLatestVersionByUserRole(int empNum, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetLatestVersionByUserRole(empNum, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    WBidDataDownloadAuthorizationService.Model.VersionModel IWBidDataDwonloadAuthService.EndGetLatestVersionByUserRole(System.IAsyncResult result)
    {
        return base.Channel.EndGetLatestVersionByUserRole(result);
    }
    
    private System.IAsyncResult OnBeginGetLatestVersionByUserRole(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int empNum = ((int)(inValues[0]));
        return ((IWBidDataDwonloadAuthService)(this)).BeginGetLatestVersionByUserRole(empNum, callback, asyncState);
    }
    
    private object[] OnEndGetLatestVersionByUserRole(System.IAsyncResult result)
    {
        WBidDataDownloadAuthorizationService.Model.VersionModel retVal = ((IWBidDataDwonloadAuthService)(this)).EndGetLatestVersionByUserRole(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetLatestVersionByUserRoleCompleted(object state)
    {
        if ((this.GetLatestVersionByUserRoleCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetLatestVersionByUserRoleCompleted(this, new GetLatestVersionByUserRoleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetLatestVersionByUserRoleAsync(int empNum)
    {
        this.GetLatestVersionByUserRoleAsync(empNum, null);
    }
    
    public void GetLatestVersionByUserRoleAsync(int empNum, object userState)
    {
        if ((this.onBeginGetLatestVersionByUserRoleDelegate == null))
        {
            this.onBeginGetLatestVersionByUserRoleDelegate = new BeginOperationDelegate(this.OnBeginGetLatestVersionByUserRole);
        }
        if ((this.onEndGetLatestVersionByUserRoleDelegate == null))
        {
            this.onEndGetLatestVersionByUserRoleDelegate = new EndOperationDelegate(this.OnEndGetLatestVersionByUserRole);
        }
        if ((this.onGetLatestVersionByUserRoleCompletedDelegate == null))
        {
            this.onGetLatestVersionByUserRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestVersionByUserRoleCompleted);
        }
        base.InvokeAsync(this.onBeginGetLatestVersionByUserRoleDelegate, new object[] {
                    empNum}, this.onEndGetLatestVersionByUserRoleDelegate, this.onGetLatestVersionByUserRoleCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginGetLatestVersionByUserRoleForMultyPlatform(WBidDataDownloadAuthorizationService.Model.EmployeeVersionDetails employeeVersionDetails, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetLatestVersionByUserRoleForMultyPlatform(employeeVersionDetails, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    WBidDataDownloadAuthorizationService.Model.VersionModel IWBidDataDwonloadAuthService.EndGetLatestVersionByUserRoleForMultyPlatform(System.IAsyncResult result)
    {
        return base.Channel.EndGetLatestVersionByUserRoleForMultyPlatform(result);
    }
    
    private System.IAsyncResult OnBeginGetLatestVersionByUserRoleForMultyPlatform(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        WBidDataDownloadAuthorizationService.Model.EmployeeVersionDetails employeeVersionDetails = ((WBidDataDownloadAuthorizationService.Model.EmployeeVersionDetails)(inValues[0]));
        return ((IWBidDataDwonloadAuthService)(this)).BeginGetLatestVersionByUserRoleForMultyPlatform(employeeVersionDetails, callback, asyncState);
    }
    
    private object[] OnEndGetLatestVersionByUserRoleForMultyPlatform(System.IAsyncResult result)
    {
        WBidDataDownloadAuthorizationService.Model.VersionModel retVal = ((IWBidDataDwonloadAuthService)(this)).EndGetLatestVersionByUserRoleForMultyPlatform(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetLatestVersionByUserRoleForMultyPlatformCompleted(object state)
    {
        if ((this.GetLatestVersionByUserRoleForMultyPlatformCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetLatestVersionByUserRoleForMultyPlatformCompleted(this, new GetLatestVersionByUserRoleForMultyPlatformCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetLatestVersionByUserRoleForMultyPlatformAsync(WBidDataDownloadAuthorizationService.Model.EmployeeVersionDetails employeeVersionDetails)
    {
        this.GetLatestVersionByUserRoleForMultyPlatformAsync(employeeVersionDetails, null);
    }
    
    public void GetLatestVersionByUserRoleForMultyPlatformAsync(WBidDataDownloadAuthorizationService.Model.EmployeeVersionDetails employeeVersionDetails, object userState)
    {
        if ((this.onBeginGetLatestVersionByUserRoleForMultyPlatformDelegate == null))
        {
            this.onBeginGetLatestVersionByUserRoleForMultyPlatformDelegate = new BeginOperationDelegate(this.OnBeginGetLatestVersionByUserRoleForMultyPlatform);
        }
        if ((this.onEndGetLatestVersionByUserRoleForMultyPlatformDelegate == null))
        {
            this.onEndGetLatestVersionByUserRoleForMultyPlatformDelegate = new EndOperationDelegate(this.OnEndGetLatestVersionByUserRoleForMultyPlatform);
        }
        if ((this.onGetLatestVersionByUserRoleForMultyPlatformCompletedDelegate == null))
        {
            this.onGetLatestVersionByUserRoleForMultyPlatformCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestVersionByUserRoleForMultyPlatformCompleted);
        }
        base.InvokeAsync(this.onBeginGetLatestVersionByUserRoleForMultyPlatformDelegate, new object[] {
                    employeeVersionDetails}, this.onEndGetLatestVersionByUserRoleForMultyPlatformDelegate, this.onGetLatestVersionByUserRoleForMultyPlatformCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginLogTimeOutDetails(System.Guid token, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginLogTimeOutDetails(token, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void IWBidDataDwonloadAuthService.EndLogTimeOutDetails(System.IAsyncResult result)
    {
        base.Channel.EndLogTimeOutDetails(result);
    }
    
    private System.IAsyncResult OnBeginLogTimeOutDetails(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Guid token = ((System.Guid)(inValues[0]));
        return ((IWBidDataDwonloadAuthService)(this)).BeginLogTimeOutDetails(token, callback, asyncState);
    }
    
    private object[] OnEndLogTimeOutDetails(System.IAsyncResult result)
    {
        ((IWBidDataDwonloadAuthService)(this)).EndLogTimeOutDetails(result);
        return null;
    }
    
    private void OnLogTimeOutDetailsCompleted(object state)
    {
        if ((this.LogTimeOutDetailsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.LogTimeOutDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void LogTimeOutDetailsAsync(System.Guid token)
    {
        this.LogTimeOutDetailsAsync(token, null);
    }
    
    public void LogTimeOutDetailsAsync(System.Guid token, object userState)
    {
        if ((this.onBeginLogTimeOutDetailsDelegate == null))
        {
            this.onBeginLogTimeOutDetailsDelegate = new BeginOperationDelegate(this.OnBeginLogTimeOutDetails);
        }
        if ((this.onEndLogTimeOutDetailsDelegate == null))
        {
            this.onEndLogTimeOutDetailsDelegate = new EndOperationDelegate(this.OnEndLogTimeOutDetails);
        }
        if ((this.onLogTimeOutDetailsCompletedDelegate == null))
        {
            this.onLogTimeOutDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogTimeOutDetailsCompleted);
        }
        base.InvokeAsync(this.onBeginLogTimeOutDetailsDelegate, new object[] {
                    token}, this.onEndLogTimeOutDetailsDelegate, this.onLogTimeOutDetailsCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginLogDownloadUpdates(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginLogDownloadUpdates(clientRequestModel, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IWBidDataDwonloadAuthService.EndLogDownloadUpdates(System.IAsyncResult result)
    {
        return base.Channel.EndLogDownloadUpdates(result);
    }
    
    private System.IAsyncResult OnBeginLogDownloadUpdates(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel = ((WBidDataDownloadAuthorizationService.Model.ClientRequestModel)(inValues[0]));
        return ((IWBidDataDwonloadAuthService)(this)).BeginLogDownloadUpdates(clientRequestModel, callback, asyncState);
    }
    
    private object[] OnEndLogDownloadUpdates(System.IAsyncResult result)
    {
        bool retVal = ((IWBidDataDwonloadAuthService)(this)).EndLogDownloadUpdates(result);
        return new object[] {
                retVal};
    }
    
    private void OnLogDownloadUpdatesCompleted(object state)
    {
        if ((this.LogDownloadUpdatesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.LogDownloadUpdatesCompleted(this, new LogDownloadUpdatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void LogDownloadUpdatesAsync(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel)
    {
        this.LogDownloadUpdatesAsync(clientRequestModel, null);
    }
    
    public void LogDownloadUpdatesAsync(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel, object userState)
    {
        if ((this.onBeginLogDownloadUpdatesDelegate == null))
        {
            this.onBeginLogDownloadUpdatesDelegate = new BeginOperationDelegate(this.OnBeginLogDownloadUpdates);
        }
        if ((this.onEndLogDownloadUpdatesDelegate == null))
        {
            this.onEndLogDownloadUpdatesDelegate = new EndOperationDelegate(this.OnEndLogDownloadUpdates);
        }
        if ((this.onLogDownloadUpdatesCompletedDelegate == null))
        {
            this.onLogDownloadUpdatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogDownloadUpdatesCompleted);
        }
        base.InvokeAsync(this.onBeginLogDownloadUpdatesDelegate, new object[] {
                    clientRequestModel}, this.onEndLogDownloadUpdatesDelegate, this.onLogDownloadUpdatesCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginSendTextAlertOneDayPriorToBidding(string round, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSendTextAlertOneDayPriorToBidding(round, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void IWBidDataDwonloadAuthService.EndSendTextAlertOneDayPriorToBidding(System.IAsyncResult result)
    {
        base.Channel.EndSendTextAlertOneDayPriorToBidding(result);
    }
    
    private System.IAsyncResult OnBeginSendTextAlertOneDayPriorToBidding(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string round = ((string)(inValues[0]));
        return ((IWBidDataDwonloadAuthService)(this)).BeginSendTextAlertOneDayPriorToBidding(round, callback, asyncState);
    }
    
    private object[] OnEndSendTextAlertOneDayPriorToBidding(System.IAsyncResult result)
    {
        ((IWBidDataDwonloadAuthService)(this)).EndSendTextAlertOneDayPriorToBidding(result);
        return null;
    }
    
    private void OnSendTextAlertOneDayPriorToBiddingCompleted(object state)
    {
        if ((this.SendTextAlertOneDayPriorToBiddingCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SendTextAlertOneDayPriorToBiddingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SendTextAlertOneDayPriorToBiddingAsync(string round)
    {
        this.SendTextAlertOneDayPriorToBiddingAsync(round, null);
    }
    
    public void SendTextAlertOneDayPriorToBiddingAsync(string round, object userState)
    {
        if ((this.onBeginSendTextAlertOneDayPriorToBiddingDelegate == null))
        {
            this.onBeginSendTextAlertOneDayPriorToBiddingDelegate = new BeginOperationDelegate(this.OnBeginSendTextAlertOneDayPriorToBidding);
        }
        if ((this.onEndSendTextAlertOneDayPriorToBiddingDelegate == null))
        {
            this.onEndSendTextAlertOneDayPriorToBiddingDelegate = new EndOperationDelegate(this.OnEndSendTextAlertOneDayPriorToBidding);
        }
        if ((this.onSendTextAlertOneDayPriorToBiddingCompletedDelegate == null))
        {
            this.onSendTextAlertOneDayPriorToBiddingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendTextAlertOneDayPriorToBiddingCompleted);
        }
        base.InvokeAsync(this.onBeginSendTextAlertOneDayPriorToBiddingDelegate, new object[] {
                    round}, this.onEndSendTextAlertOneDayPriorToBiddingDelegate, this.onSendTextAlertOneDayPriorToBiddingCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginSendTextAlertOneHourPriorToBidding(string round, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSendTextAlertOneHourPriorToBidding(round, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void IWBidDataDwonloadAuthService.EndSendTextAlertOneHourPriorToBidding(System.IAsyncResult result)
    {
        base.Channel.EndSendTextAlertOneHourPriorToBidding(result);
    }
    
    private System.IAsyncResult OnBeginSendTextAlertOneHourPriorToBidding(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string round = ((string)(inValues[0]));
        return ((IWBidDataDwonloadAuthService)(this)).BeginSendTextAlertOneHourPriorToBidding(round, callback, asyncState);
    }
    
    private object[] OnEndSendTextAlertOneHourPriorToBidding(System.IAsyncResult result)
    {
        ((IWBidDataDwonloadAuthService)(this)).EndSendTextAlertOneHourPriorToBidding(result);
        return null;
    }
    
    private void OnSendTextAlertOneHourPriorToBiddingCompleted(object state)
    {
        if ((this.SendTextAlertOneHourPriorToBiddingCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SendTextAlertOneHourPriorToBiddingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SendTextAlertOneHourPriorToBiddingAsync(string round)
    {
        this.SendTextAlertOneHourPriorToBiddingAsync(round, null);
    }
    
    public void SendTextAlertOneHourPriorToBiddingAsync(string round, object userState)
    {
        if ((this.onBeginSendTextAlertOneHourPriorToBiddingDelegate == null))
        {
            this.onBeginSendTextAlertOneHourPriorToBiddingDelegate = new BeginOperationDelegate(this.OnBeginSendTextAlertOneHourPriorToBidding);
        }
        if ((this.onEndSendTextAlertOneHourPriorToBiddingDelegate == null))
        {
            this.onEndSendTextAlertOneHourPriorToBiddingDelegate = new EndOperationDelegate(this.OnEndSendTextAlertOneHourPriorToBidding);
        }
        if ((this.onSendTextAlertOneHourPriorToBiddingCompletedDelegate == null))
        {
            this.onSendTextAlertOneHourPriorToBiddingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendTextAlertOneHourPriorToBiddingCompleted);
        }
        base.InvokeAsync(this.onBeginSendTextAlertOneHourPriorToBiddingDelegate, new object[] {
                    round}, this.onEndSendTextAlertOneHourPriorToBiddingDelegate, this.onSendTextAlertOneHourPriorToBiddingCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginSubmitBidDetails(WBidDataDownloadAuthorizationService.Model.SubmitBidModel submitBidModel, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSubmitBidDetails(submitBidModel, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void IWBidDataDwonloadAuthService.EndSubmitBidDetails(System.IAsyncResult result)
    {
        base.Channel.EndSubmitBidDetails(result);
    }
    
    private System.IAsyncResult OnBeginSubmitBidDetails(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        WBidDataDownloadAuthorizationService.Model.SubmitBidModel submitBidModel = ((WBidDataDownloadAuthorizationService.Model.SubmitBidModel)(inValues[0]));
        return ((IWBidDataDwonloadAuthService)(this)).BeginSubmitBidDetails(submitBidModel, callback, asyncState);
    }
    
    private object[] OnEndSubmitBidDetails(System.IAsyncResult result)
    {
        ((IWBidDataDwonloadAuthService)(this)).EndSubmitBidDetails(result);
        return null;
    }
    
    private void OnSubmitBidDetailsCompleted(object state)
    {
        if ((this.SubmitBidDetailsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SubmitBidDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SubmitBidDetailsAsync(WBidDataDownloadAuthorizationService.Model.SubmitBidModel submitBidModel)
    {
        this.SubmitBidDetailsAsync(submitBidModel, null);
    }
    
    public void SubmitBidDetailsAsync(WBidDataDownloadAuthorizationService.Model.SubmitBidModel submitBidModel, object userState)
    {
        if ((this.onBeginSubmitBidDetailsDelegate == null))
        {
            this.onBeginSubmitBidDetailsDelegate = new BeginOperationDelegate(this.OnBeginSubmitBidDetails);
        }
        if ((this.onEndSubmitBidDetailsDelegate == null))
        {
            this.onEndSubmitBidDetailsDelegate = new EndOperationDelegate(this.OnEndSubmitBidDetails);
        }
        if ((this.onSubmitBidDetailsCompletedDelegate == null))
        {
            this.onSubmitBidDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitBidDetailsCompleted);
        }
        base.InvokeAsync(this.onBeginSubmitBidDetailsDelegate, new object[] {
                    submitBidModel}, this.onEndSubmitBidDetailsDelegate, this.onSubmitBidDetailsCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginGetAdminUserCredential(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAdminUserCredential(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    WBidDataDownloadAuthorizationService.Model.UserCredentialModel IWBidDataDwonloadAuthService.EndGetAdminUserCredential(System.IAsyncResult result)
    {
        return base.Channel.EndGetAdminUserCredential(result);
    }
    
    private System.IAsyncResult OnBeginGetAdminUserCredential(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IWBidDataDwonloadAuthService)(this)).BeginGetAdminUserCredential(callback, asyncState);
    }
    
    private object[] OnEndGetAdminUserCredential(System.IAsyncResult result)
    {
        WBidDataDownloadAuthorizationService.Model.UserCredentialModel retVal = ((IWBidDataDwonloadAuthService)(this)).EndGetAdminUserCredential(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAdminUserCredentialCompleted(object state)
    {
        if ((this.GetAdminUserCredentialCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAdminUserCredentialCompleted(this, new GetAdminUserCredentialCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAdminUserCredentialAsync()
    {
        this.GetAdminUserCredentialAsync(null);
    }
    
    public void GetAdminUserCredentialAsync(object userState)
    {
        if ((this.onBeginGetAdminUserCredentialDelegate == null))
        {
            this.onBeginGetAdminUserCredentialDelegate = new BeginOperationDelegate(this.OnBeginGetAdminUserCredential);
        }
        if ((this.onEndGetAdminUserCredentialDelegate == null))
        {
            this.onEndGetAdminUserCredentialDelegate = new EndOperationDelegate(this.OnEndGetAdminUserCredential);
        }
        if ((this.onGetAdminUserCredentialCompletedDelegate == null))
        {
            this.onGetAdminUserCredentialCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAdminUserCredentialCompleted);
        }
        base.InvokeAsync(this.onBeginGetAdminUserCredentialDelegate, null, this.onEndGetAdminUserCredentialDelegate, this.onGetAdminUserCredentialCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginSendMail(WBidDataDownloadAuthorizationService.Model.MailInfo mailInfo, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSendMail(mailInfo, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IWBidDataDwonloadAuthService.EndSendMail(System.IAsyncResult result)
    {
        return base.Channel.EndSendMail(result);
    }
    
    private System.IAsyncResult OnBeginSendMail(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        WBidDataDownloadAuthorizationService.Model.MailInfo mailInfo = ((WBidDataDownloadAuthorizationService.Model.MailInfo)(inValues[0]));
        return ((IWBidDataDwonloadAuthService)(this)).BeginSendMail(mailInfo, callback, asyncState);
    }
    
    private object[] OnEndSendMail(System.IAsyncResult result)
    {
        string retVal = ((IWBidDataDwonloadAuthService)(this)).EndSendMail(result);
        return new object[] {
                retVal};
    }
    
    private void OnSendMailCompleted(object state)
    {
        if ((this.SendMailCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SendMailCompleted(this, new SendMailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SendMailAsync(WBidDataDownloadAuthorizationService.Model.MailInfo mailInfo)
    {
        this.SendMailAsync(mailInfo, null);
    }
    
    public void SendMailAsync(WBidDataDownloadAuthorizationService.Model.MailInfo mailInfo, object userState)
    {
        if ((this.onBeginSendMailDelegate == null))
        {
            this.onBeginSendMailDelegate = new BeginOperationDelegate(this.OnBeginSendMail);
        }
        if ((this.onEndSendMailDelegate == null))
        {
            this.onEndSendMailDelegate = new EndOperationDelegate(this.OnEndSendMail);
        }
        if ((this.onSendMailCompletedDelegate == null))
        {
            this.onSendMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendMailCompleted);
        }
        base.InvokeAsync(this.onBeginSendMailDelegate, new object[] {
                    mailInfo}, this.onEndSendMailDelegate, this.onSendMailCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginDownloadHistoricalData(WBidDataDownloadAuthorizationService.Model.BidDetails bidDetails, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDownloadHistoricalData(bidDetails, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    WBidDataDownloadAuthorizationService.Model.FileInfo IWBidDataDwonloadAuthService.EndDownloadHistoricalData(System.IAsyncResult result)
    {
        return base.Channel.EndDownloadHistoricalData(result);
    }
    
    private System.IAsyncResult OnBeginDownloadHistoricalData(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        WBidDataDownloadAuthorizationService.Model.BidDetails bidDetails = ((WBidDataDownloadAuthorizationService.Model.BidDetails)(inValues[0]));
        return ((IWBidDataDwonloadAuthService)(this)).BeginDownloadHistoricalData(bidDetails, callback, asyncState);
    }
    
    private object[] OnEndDownloadHistoricalData(System.IAsyncResult result)
    {
        WBidDataDownloadAuthorizationService.Model.FileInfo retVal = ((IWBidDataDwonloadAuthService)(this)).EndDownloadHistoricalData(result);
        return new object[] {
                retVal};
    }
    
    private void OnDownloadHistoricalDataCompleted(object state)
    {
        if ((this.DownloadHistoricalDataCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DownloadHistoricalDataCompleted(this, new DownloadHistoricalDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void DownloadHistoricalDataAsync(WBidDataDownloadAuthorizationService.Model.BidDetails bidDetails)
    {
        this.DownloadHistoricalDataAsync(bidDetails, null);
    }
    
    public void DownloadHistoricalDataAsync(WBidDataDownloadAuthorizationService.Model.BidDetails bidDetails, object userState)
    {
        if ((this.onBeginDownloadHistoricalDataDelegate == null))
        {
            this.onBeginDownloadHistoricalDataDelegate = new BeginOperationDelegate(this.OnBeginDownloadHistoricalData);
        }
        if ((this.onEndDownloadHistoricalDataDelegate == null))
        {
            this.onEndDownloadHistoricalDataDelegate = new EndOperationDelegate(this.OnEndDownloadHistoricalData);
        }
        if ((this.onDownloadHistoricalDataCompletedDelegate == null))
        {
            this.onDownloadHistoricalDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadHistoricalDataCompleted);
        }
        base.InvokeAsync(this.onBeginDownloadHistoricalDataDelegate, new object[] {
                    bidDetails}, this.onEndDownloadHistoricalDataDelegate, this.onDownloadHistoricalDataCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginGetAvailableHistoricalList(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAvailableHistoricalList(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    WBidDataDownloadAuthorizationService.Model.BidData[] IWBidDataDwonloadAuthService.EndGetAvailableHistoricalList(System.IAsyncResult result)
    {
        return base.Channel.EndGetAvailableHistoricalList(result);
    }
    
    private System.IAsyncResult OnBeginGetAvailableHistoricalList(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IWBidDataDwonloadAuthService)(this)).BeginGetAvailableHistoricalList(callback, asyncState);
    }
    
    private object[] OnEndGetAvailableHistoricalList(System.IAsyncResult result)
    {
        WBidDataDownloadAuthorizationService.Model.BidData[] retVal = ((IWBidDataDwonloadAuthService)(this)).EndGetAvailableHistoricalList(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAvailableHistoricalListCompleted(object state)
    {
        if ((this.GetAvailableHistoricalListCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAvailableHistoricalListCompleted(this, new GetAvailableHistoricalListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAvailableHistoricalListAsync()
    {
        this.GetAvailableHistoricalListAsync(null);
    }
    
    public void GetAvailableHistoricalListAsync(object userState)
    {
        if ((this.onBeginGetAvailableHistoricalListDelegate == null))
        {
            this.onBeginGetAvailableHistoricalListDelegate = new BeginOperationDelegate(this.OnBeginGetAvailableHistoricalList);
        }
        if ((this.onEndGetAvailableHistoricalListDelegate == null))
        {
            this.onEndGetAvailableHistoricalListDelegate = new EndOperationDelegate(this.OnEndGetAvailableHistoricalList);
        }
        if ((this.onGetAvailableHistoricalListCompletedDelegate == null))
        {
            this.onGetAvailableHistoricalListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAvailableHistoricalListCompleted);
        }
        base.InvokeAsync(this.onBeginGetAvailableHistoricalListDelegate, null, this.onEndGetAvailableHistoricalListDelegate, this.onGetAvailableHistoricalListCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IWBidDataDwonloadAuthService.BeginLogWBidRepairDetails(WBidDataDownloadAuthorizationService.Model.WbidRepair wbidRepair, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginLogWBidRepairDetails(wbidRepair, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void IWBidDataDwonloadAuthService.EndLogWBidRepairDetails(System.IAsyncResult result)
    {
        base.Channel.EndLogWBidRepairDetails(result);
    }
    
    private System.IAsyncResult OnBeginLogWBidRepairDetails(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        WBidDataDownloadAuthorizationService.Model.WbidRepair wbidRepair = ((WBidDataDownloadAuthorizationService.Model.WbidRepair)(inValues[0]));
        return ((IWBidDataDwonloadAuthService)(this)).BeginLogWBidRepairDetails(wbidRepair, callback, asyncState);
    }
    
    private object[] OnEndLogWBidRepairDetails(System.IAsyncResult result)
    {
        ((IWBidDataDwonloadAuthService)(this)).EndLogWBidRepairDetails(result);
        return null;
    }
    
    private void OnLogWBidRepairDetailsCompleted(object state)
    {
        if ((this.LogWBidRepairDetailsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.LogWBidRepairDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void LogWBidRepairDetailsAsync(WBidDataDownloadAuthorizationService.Model.WbidRepair wbidRepair)
    {
        this.LogWBidRepairDetailsAsync(wbidRepair, null);
    }
    
    public void LogWBidRepairDetailsAsync(WBidDataDownloadAuthorizationService.Model.WbidRepair wbidRepair, object userState)
    {
        if ((this.onBeginLogWBidRepairDetailsDelegate == null))
        {
            this.onBeginLogWBidRepairDetailsDelegate = new BeginOperationDelegate(this.OnBeginLogWBidRepairDetails);
        }
        if ((this.onEndLogWBidRepairDetailsDelegate == null))
        {
            this.onEndLogWBidRepairDetailsDelegate = new EndOperationDelegate(this.OnEndLogWBidRepairDetails);
        }
        if ((this.onLogWBidRepairDetailsCompletedDelegate == null))
        {
            this.onLogWBidRepairDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogWBidRepairDetailsCompleted);
        }
        base.InvokeAsync(this.onBeginLogWBidRepairDetailsDelegate, new object[] {
                    wbidRepair}, this.onEndLogWBidRepairDetailsDelegate, this.onLogWBidRepairDetailsCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IWBidDataDwonloadAuthService CreateChannel()
    {
        return new WBidDataDwonloadAuthServiceClientChannel(this);
    }
    
    private class WBidDataDwonloadAuthServiceClientChannel : ChannelBase<IWBidDataDwonloadAuthService>, IWBidDataDwonloadAuthService
    {
        
        public WBidDataDwonloadAuthServiceClientChannel(System.ServiceModel.ClientBase<IWBidDataDwonloadAuthService> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginGetAuthorizationDetails(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = clientRequestModel;
            System.IAsyncResult _result = base.BeginInvoke("GetAuthorizationDetails", _args, callback, asyncState);
            return _result;
        }
        
        public WBidDataDownloadAuthorizationService.Model.ServiceResponseModel EndGetAuthorizationDetails(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            WBidDataDownloadAuthorizationService.Model.ServiceResponseModel _result = ((WBidDataDownloadAuthorizationService.Model.ServiceResponseModel)(base.EndInvoke("GetAuthorizationDetails", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetAuthorizationforMultiPlatform(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = clientRequestModel;
            System.IAsyncResult _result = base.BeginInvoke("GetAuthorizationforMultiPlatform", _args, callback, asyncState);
            return _result;
        }
        
        public WBidDataDownloadAuthorizationService.Model.ServiceResponseModel EndGetAuthorizationforMultiPlatform(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            WBidDataDownloadAuthorizationService.Model.ServiceResponseModel _result = ((WBidDataDownloadAuthorizationService.Model.ServiceResponseModel)(base.EndInvoke("GetAuthorizationforMultiPlatform", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetLatestVersion(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("GetLatestVersion", _args, callback, asyncState);
            return _result;
        }
        
        public WBidDataDownloadAuthorizationService.Model.VersionModel EndGetLatestVersion(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            WBidDataDownloadAuthorizationService.Model.VersionModel _result = ((WBidDataDownloadAuthorizationService.Model.VersionModel)(base.EndInvoke("GetLatestVersion", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetLatestVersionByUserRole(int empNum, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = empNum;
            System.IAsyncResult _result = base.BeginInvoke("GetLatestVersionByUserRole", _args, callback, asyncState);
            return _result;
        }
        
        public WBidDataDownloadAuthorizationService.Model.VersionModel EndGetLatestVersionByUserRole(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            WBidDataDownloadAuthorizationService.Model.VersionModel _result = ((WBidDataDownloadAuthorizationService.Model.VersionModel)(base.EndInvoke("GetLatestVersionByUserRole", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetLatestVersionByUserRoleForMultyPlatform(WBidDataDownloadAuthorizationService.Model.EmployeeVersionDetails employeeVersionDetails, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = employeeVersionDetails;
            System.IAsyncResult _result = base.BeginInvoke("GetLatestVersionByUserRoleForMultyPlatform", _args, callback, asyncState);
            return _result;
        }
        
        public WBidDataDownloadAuthorizationService.Model.VersionModel EndGetLatestVersionByUserRoleForMultyPlatform(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            WBidDataDownloadAuthorizationService.Model.VersionModel _result = ((WBidDataDownloadAuthorizationService.Model.VersionModel)(base.EndInvoke("GetLatestVersionByUserRoleForMultyPlatform", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginLogTimeOutDetails(System.Guid token, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = token;
            System.IAsyncResult _result = base.BeginInvoke("LogTimeOutDetails", _args, callback, asyncState);
            return _result;
        }
        
        public void EndLogTimeOutDetails(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("LogTimeOutDetails", _args, result);
        }
        
        public System.IAsyncResult BeginLogDownloadUpdates(WBidDataDownloadAuthorizationService.Model.ClientRequestModel clientRequestModel, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = clientRequestModel;
            System.IAsyncResult _result = base.BeginInvoke("LogDownloadUpdates", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndLogDownloadUpdates(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("LogDownloadUpdates", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginSendTextAlertOneDayPriorToBidding(string round, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = round;
            System.IAsyncResult _result = base.BeginInvoke("SendTextAlertOneDayPriorToBidding", _args, callback, asyncState);
            return _result;
        }
        
        public void EndSendTextAlertOneDayPriorToBidding(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("SendTextAlertOneDayPriorToBidding", _args, result);
        }
        
        public System.IAsyncResult BeginSendTextAlertOneHourPriorToBidding(string round, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = round;
            System.IAsyncResult _result = base.BeginInvoke("SendTextAlertOneHourPriorToBidding", _args, callback, asyncState);
            return _result;
        }
        
        public void EndSendTextAlertOneHourPriorToBidding(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("SendTextAlertOneHourPriorToBidding", _args, result);
        }
        
        public System.IAsyncResult BeginSubmitBidDetails(WBidDataDownloadAuthorizationService.Model.SubmitBidModel submitBidModel, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = submitBidModel;
            System.IAsyncResult _result = base.BeginInvoke("SubmitBidDetails", _args, callback, asyncState);
            return _result;
        }
        
        public void EndSubmitBidDetails(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("SubmitBidDetails", _args, result);
        }
        
        public System.IAsyncResult BeginGetAdminUserCredential(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("GetAdminUserCredential", _args, callback, asyncState);
            return _result;
        }
        
        public WBidDataDownloadAuthorizationService.Model.UserCredentialModel EndGetAdminUserCredential(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            WBidDataDownloadAuthorizationService.Model.UserCredentialModel _result = ((WBidDataDownloadAuthorizationService.Model.UserCredentialModel)(base.EndInvoke("GetAdminUserCredential", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginSendMail(WBidDataDownloadAuthorizationService.Model.MailInfo mailInfo, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = mailInfo;
            System.IAsyncResult _result = base.BeginInvoke("SendMail", _args, callback, asyncState);
            return _result;
        }
        
        public string EndSendMail(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("SendMail", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginDownloadHistoricalData(WBidDataDownloadAuthorizationService.Model.BidDetails bidDetails, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = bidDetails;
            System.IAsyncResult _result = base.BeginInvoke("DownloadHistoricalData", _args, callback, asyncState);
            return _result;
        }
        
        public WBidDataDownloadAuthorizationService.Model.FileInfo EndDownloadHistoricalData(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            WBidDataDownloadAuthorizationService.Model.FileInfo _result = ((WBidDataDownloadAuthorizationService.Model.FileInfo)(base.EndInvoke("DownloadHistoricalData", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetAvailableHistoricalList(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("GetAvailableHistoricalList", _args, callback, asyncState);
            return _result;
        }
        
        public WBidDataDownloadAuthorizationService.Model.BidData[] EndGetAvailableHistoricalList(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            WBidDataDownloadAuthorizationService.Model.BidData[] _result = ((WBidDataDownloadAuthorizationService.Model.BidData[])(base.EndInvoke("GetAvailableHistoricalList", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginLogWBidRepairDetails(WBidDataDownloadAuthorizationService.Model.WbidRepair wbidRepair, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = wbidRepair;
            System.IAsyncResult _result = base.BeginInvoke("LogWBidRepairDetails", _args, callback, asyncState);
            return _result;
        }
        
        public void EndLogWBidRepairDetails(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("LogWBidRepairDetails", _args, result);
        }
    }
}
